{"version":3,"sources":["App.js","index.js"],"names":["Todo","useState","inputdata","setInputData","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","map","curElem","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","class","className","type","placeholder","value","onChange","event","target","onClick","index","item_todo_edited","find","editItem","updatedItems","filter","deleteItem","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"2MAgIeA,EAlHF,WACT,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAZT,WACjB,IAAMG,EAAQC,aAAaC,QAAQ,cAEnC,OAAIF,EACOG,KAAKC,MAAMJ,GAEX,GAMwBK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAGMC,EAAU,WACZ,GAAKd,EAEE,GAAIA,GAAaY,EACpBH,EACID,EAAMO,KAAI,SAACC,GACP,OAAIA,EAAQC,KAAOP,EACR,2BAAKM,GAAZ,IAAqBE,KAAMlB,IAExBgB,MAIff,EAAa,IACbU,EAAc,MACdE,GAAgB,OACb,CACH,IAAMM,EAAiB,CACnBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAEVS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SApBbsB,MAAM,sBAoDd,OAJAC,qBAAU,WACNrB,aAAasB,QAAQ,aAAcpB,KAAKqB,UAAUlB,MACnD,CAACA,IAGA,qCACA,+BAAI,mBAAGmB,MAAM,wBAAb,sBACI,qBAAKC,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,WAAf,UACI,uBACIC,KAAK,OACLC,YAAY,kBACZF,UAAU,eACVG,MAAO/B,EACPgC,SAAU,SAACC,GAAD,OAAWhC,EAAagC,EAAMC,OAAOH,UAElDnB,EACG,mBAAGgB,UAAU,sBAAsBO,QAASrB,IAE5C,mBAAGc,UAAU,qBAAqBO,QAASrB,OAInD,qBAAKc,UAAU,YAAf,SACKpB,EAAMO,KAAI,SAACC,GACR,OACI,sBAAKY,UAAU,WAAf,UACI,6BAAKZ,EAAQE,OACb,sBAAKU,UAAU,WAAf,UACI,mBACIA,UAAU,sBACVO,QAAS,kBAvDhC,SAACC,GACd,IAAMC,EAAmB7B,EAAM8B,MAAK,SAACtB,GACjC,OAAOA,EAAQC,KAAOmB,KAE1BnC,EAAaoC,EAAiBnB,MAC9BP,EAAcyB,GACdvB,GAAgB,GAiDmC0B,CAASvB,EAAQC,OACpC,mBACIW,UAAU,2BACVO,QAAS,kBAhD9B,SAACC,GAChB,IAAMI,EAAehC,EAAMiC,QAAO,SAACzB,GAC/B,OAAOA,EAAQC,KAAOmB,KAE1B3B,EAAS+B,GA4C0CE,CAAW1B,EAAQC,YARfD,EAAQC,SAgBnD,qBAAKW,UAAU,YAAf,SACI,wBACIA,UAAU,eACV,oBAAkB,aAClBO,QApDN,WACd1B,EAAS,KAgDO,SAII,4DCnH5BkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c93d5d35.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\n\n// Setting Local Sotrage\nconst getLocalData = () => {\n    const lists = localStorage.getItem(\"mytodolist\");\n\n    if (lists) {\n        return JSON.parse(lists);\n    } else {\n        return [];\n    }\n};\n\nconst Todo = () => {\n    const [inputdata, setInputData] = useState(\"\");\n    const [items, setItems] = useState(getLocalData());\n    const [isEditItem, setIsEditItem] = useState(\"\");\n    const [toggleButton, setToggleButton] = useState(false);\n\n    // add the items fucnction\n    const addItem = () => {\n        if (!inputdata) {\n            alert(\"plz fill the data\");\n        } else if (inputdata && toggleButton) {\n            setItems(\n                items.map((curElem) => {\n                    if (curElem.id === isEditItem) {\n                        return { ...curElem, name: inputdata };\n                    }\n                    return curElem;\n                })\n            );\n\n            setInputData(\"\");\n            setIsEditItem(null);\n            setToggleButton(false);\n        } else {\n            const myNewInputData = {\n                id: new Date().getTime().toString(),\n                name: inputdata,\n            };\n            setItems([...items, myNewInputData]);\n            setInputData(\"\");\n        }\n    };\n\n    //edit the items\n    const editItem = (index) => {\n        const item_todo_edited = items.find((curElem) => {\n            return curElem.id === index;\n        });\n        setInputData(item_todo_edited.name);\n        setIsEditItem(index);\n        setToggleButton(true);\n    };\n\n    // how to delete items section\n    const deleteItem = (index) => {\n        const updatedItems = items.filter((curElem) => {\n            return curElem.id !== index;\n        });\n        setItems(updatedItems);\n    };\n\n    // remove all the elements\n    const removeAll = () => {\n        setItems([]);\n    };\n\n    // adding localStorage\n    useEffect(() => {\n        localStorage.setItem(\"mytodolist\", JSON.stringify(items));\n    }, [items]);\n\n    return (\n        <>\n        <h1><i class=\"fas fa-check-circle\"></i>&nbsp;My ToDo List</h1>\n            <div className=\"main-div\">\n                <div className=\"child-div\">\n                    <div className=\"addItems\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"✍ Add Item\"\n                            className=\"form-control\"\n                            value={inputdata}\n                            onChange={(event) => setInputData(event.target.value)}\n                        />\n                        {toggleButton ? (\n                            <i className=\"far fa-edit add-btn\" onClick={addItem}></i>\n                        ) : (\n                            <i className=\"fa fa-plus add-btn\" onClick={addItem}></i>\n                        )}\n                    </div>\n                    {/* show our items  */}\n                    <div className=\"showItems\">\n                        {items.map((curElem) => {\n                            return (\n                                <div className=\"eachItem\" key={curElem.id}>\n                                    <h3>{curElem.name}</h3>\n                                    <div className=\"todo-btn\">\n                                        <i\n                                            className=\"far fa-edit add-btn\"\n                                            onClick={() => editItem(curElem.id)}></i>\n                                        <i\n                                            className=\"far fa-trash-alt add-btn\"\n                                            onClick={() => deleteItem(curElem.id)}></i>\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n\n                    {/* rmeove all items  */}\n                    <div className=\"showItems\">\n                        <button\n                            className=\"btn effect04\"\n                            data-sm-link-text=\"Remove All\"\n                            onClick={removeAll}>\n                            <span> CHECK LIST</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Todo;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}